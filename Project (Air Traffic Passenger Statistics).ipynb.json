{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 468,
   "id": "cbf3c26a",
   "metadata": {},
   "outputs": [],
   "source": [
    "# importing the required librar\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "724840f6",
   "metadata": {},
   "source": [
    "# 1-Load tha dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 469,
   "id": "d185e5f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity Period</th>\n",
       "      <th>Operating Airline</th>\n",
       "      <th>Operating Airline IATA Code</th>\n",
       "      <th>Published Airline</th>\n",
       "      <th>Published Airline IATA Code</th>\n",
       "      <th>GEO Summary</th>\n",
       "      <th>GEO Region</th>\n",
       "      <th>Activity Type Code</th>\n",
       "      <th>Price Category Code</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding Area</th>\n",
       "      <th>Passenger Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>27271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>29131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Thru / Transit</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>5415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>35156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>34090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>2198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>21468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5238</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>46670 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Activity Period Operating Airline Operating Airline IATA Code  \\\n",
       "0               200507      ATA Airlines                          TZ   \n",
       "1               200507      ATA Airlines                          TZ   \n",
       "2               200507      ATA Airlines                          TZ   \n",
       "3               200507        Air Canada                          AC   \n",
       "4               200507        Air Canada                          AC   \n",
       "...                ...               ...                         ...   \n",
       "46665           202106   United Airlines                          UA   \n",
       "46666           202106   United Airlines                          UA   \n",
       "46667           202106   United Airlines                          UA   \n",
       "46668           202106   United Airlines                          UA   \n",
       "46669           202106   United Airlines                          UA   \n",
       "\n",
       "      Published Airline Published Airline IATA Code    GEO Summary  \\\n",
       "0          ATA Airlines                          TZ       Domestic   \n",
       "1          ATA Airlines                          TZ       Domestic   \n",
       "2          ATA Airlines                          TZ       Domestic   \n",
       "3            Air Canada                          AC  International   \n",
       "4            Air Canada                          AC  International   \n",
       "...                 ...                         ...            ...   \n",
       "46665   United Airlines                          UA  International   \n",
       "46666   United Airlines                          UA  International   \n",
       "46667   United Airlines                          UA  International   \n",
       "46668   United Airlines                          UA  International   \n",
       "46669   United Airlines                          UA  International   \n",
       "\n",
       "        GEO Region Activity Type Code Price Category Code       Terminal  \\\n",
       "0               US           Deplaned            Low Fare     Terminal 1   \n",
       "1               US           Enplaned            Low Fare     Terminal 1   \n",
       "2               US     Thru / Transit            Low Fare     Terminal 1   \n",
       "3           Canada           Deplaned               Other     Terminal 1   \n",
       "4           Canada           Enplaned               Other     Terminal 1   \n",
       "...            ...                ...                 ...            ...   \n",
       "46665       Mexico           Enplaned               Other  International   \n",
       "46666       Mexico           Enplaned               Other     Terminal 3   \n",
       "46667       Mexico           Enplaned               Other     Terminal 3   \n",
       "46668  Middle East           Deplaned               Other  International   \n",
       "46669  Middle East           Enplaned               Other  International   \n",
       "\n",
       "      Boarding Area  Passenger Count  \n",
       "0                 B            27271  \n",
       "1                 B            29131  \n",
       "2                 B             5415  \n",
       "3                 B            35156  \n",
       "4                 B            34090  \n",
       "...             ...              ...  \n",
       "46665             G             2198  \n",
       "46666             E              419  \n",
       "46667             F            21468  \n",
       "46668             G             4024  \n",
       "46669             G             5238  \n",
       "\n",
       "[46670 rows x 12 columns]"
      ]
     },
     "execution_count": 469,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv('/Users/Ajwad/Desktop/AM/Air_Traffic_Passenger_Statistics.csv') # Load tha dataset\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 470,
   "id": "d72601f6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity Period</th>\n",
       "      <th>Operating Airline</th>\n",
       "      <th>Operating Airline IATA Code</th>\n",
       "      <th>Published Airline</th>\n",
       "      <th>Published Airline IATA Code</th>\n",
       "      <th>GEO Summary</th>\n",
       "      <th>GEO Region</th>\n",
       "      <th>Activity Type Code</th>\n",
       "      <th>Price Category Code</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding Area</th>\n",
       "      <th>Passenger Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>27271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>29131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Thru / Transit</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>5415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>35156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>34090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>2198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>21468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5238</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>46670 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Activity Period Operating Airline Operating Airline IATA Code  \\\n",
       "0               200507      ATA Airlines                          TZ   \n",
       "1               200507      ATA Airlines                          TZ   \n",
       "2               200507      ATA Airlines                          TZ   \n",
       "3               200507        Air Canada                          AC   \n",
       "4               200507        Air Canada                          AC   \n",
       "...                ...               ...                         ...   \n",
       "46665           202106   United Airlines                          UA   \n",
       "46666           202106   United Airlines                          UA   \n",
       "46667           202106   United Airlines                          UA   \n",
       "46668           202106   United Airlines                          UA   \n",
       "46669           202106   United Airlines                          UA   \n",
       "\n",
       "      Published Airline Published Airline IATA Code    GEO Summary  \\\n",
       "0          ATA Airlines                          TZ       Domestic   \n",
       "1          ATA Airlines                          TZ       Domestic   \n",
       "2          ATA Airlines                          TZ       Domestic   \n",
       "3            Air Canada                          AC  International   \n",
       "4            Air Canada                          AC  International   \n",
       "...                 ...                         ...            ...   \n",
       "46665   United Airlines                          UA  International   \n",
       "46666   United Airlines                          UA  International   \n",
       "46667   United Airlines                          UA  International   \n",
       "46668   United Airlines                          UA  International   \n",
       "46669   United Airlines                          UA  International   \n",
       "\n",
       "        GEO Region Activity Type Code Price Category Code       Terminal  \\\n",
       "0               US           Deplaned            Low Fare     Terminal 1   \n",
       "1               US           Enplaned            Low Fare     Terminal 1   \n",
       "2               US     Thru / Transit            Low Fare     Terminal 1   \n",
       "3           Canada           Deplaned               Other     Terminal 1   \n",
       "4           Canada           Enplaned               Other     Terminal 1   \n",
       "...            ...                ...                 ...            ...   \n",
       "46665       Mexico           Enplaned               Other  International   \n",
       "46666       Mexico           Enplaned               Other     Terminal 3   \n",
       "46667       Mexico           Enplaned               Other     Terminal 3   \n",
       "46668  Middle East           Deplaned               Other  International   \n",
       "46669  Middle East           Enplaned               Other  International   \n",
       "\n",
       "      Boarding Area  Passenger Count  \n",
       "0                 B            27271  \n",
       "1                 B            29131  \n",
       "2                 B             5415  \n",
       "3                 B            35156  \n",
       "4                 B            34090  \n",
       "...             ...              ...  \n",
       "46665             G             2198  \n",
       "46666             E              419  \n",
       "46667             F            21468  \n",
       "46668             G             4024  \n",
       "46669             G             5238  \n",
       "\n",
       "[46670 rows x 12 columns]"
      ]
     },
     "execution_count": 470,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "copy_data = df.copy()  # leaving the original dataset untouched in case it will be needed later\n",
    "copy_data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "89efe83f",
   "metadata": {},
   "source": [
    "# 2-Data exploration"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 471,
   "id": "81f152d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity Period</th>\n",
       "      <th>Operating Airline</th>\n",
       "      <th>Operating Airline IATA Code</th>\n",
       "      <th>Published Airline</th>\n",
       "      <th>Published Airline IATA Code</th>\n",
       "      <th>GEO Summary</th>\n",
       "      <th>GEO Region</th>\n",
       "      <th>Activity Type Code</th>\n",
       "      <th>Price Category Code</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding Area</th>\n",
       "      <th>Passenger Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>27271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>29131</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>200507</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>TZ</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Thru / Transit</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>5415</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>35156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>AC</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>34090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air China</td>\n",
       "      <td>CA</td>\n",
       "      <td>Air China</td>\n",
       "      <td>CA</td>\n",
       "      <td>International</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>6263</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air China</td>\n",
       "      <td>CA</td>\n",
       "      <td>Air China</td>\n",
       "      <td>CA</td>\n",
       "      <td>International</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5500</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air France</td>\n",
       "      <td>AF</td>\n",
       "      <td>Air France</td>\n",
       "      <td>AF</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>12050</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air France</td>\n",
       "      <td>AF</td>\n",
       "      <td>Air France</td>\n",
       "      <td>AF</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>11638</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>200507</td>\n",
       "      <td>Air New Zealand</td>\n",
       "      <td>NZ</td>\n",
       "      <td>Air New Zealand</td>\n",
       "      <td>NZ</td>\n",
       "      <td>International</td>\n",
       "      <td>Australia / Oceania</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4998</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Activity Period Operating Airline Operating Airline IATA Code  \\\n",
       "0           200507      ATA Airlines                          TZ   \n",
       "1           200507      ATA Airlines                          TZ   \n",
       "2           200507      ATA Airlines                          TZ   \n",
       "3           200507        Air Canada                          AC   \n",
       "4           200507        Air Canada                          AC   \n",
       "5           200507         Air China                          CA   \n",
       "6           200507         Air China                          CA   \n",
       "7           200507        Air France                          AF   \n",
       "8           200507        Air France                          AF   \n",
       "9           200507   Air New Zealand                          NZ   \n",
       "\n",
       "  Published Airline Published Airline IATA Code    GEO Summary  \\\n",
       "0      ATA Airlines                          TZ       Domestic   \n",
       "1      ATA Airlines                          TZ       Domestic   \n",
       "2      ATA Airlines                          TZ       Domestic   \n",
       "3        Air Canada                          AC  International   \n",
       "4        Air Canada                          AC  International   \n",
       "5         Air China                          CA  International   \n",
       "6         Air China                          CA  International   \n",
       "7        Air France                          AF  International   \n",
       "8        Air France                          AF  International   \n",
       "9   Air New Zealand                          NZ  International   \n",
       "\n",
       "            GEO Region Activity Type Code Price Category Code       Terminal  \\\n",
       "0                   US           Deplaned            Low Fare     Terminal 1   \n",
       "1                   US           Enplaned            Low Fare     Terminal 1   \n",
       "2                   US     Thru / Transit            Low Fare     Terminal 1   \n",
       "3               Canada           Deplaned               Other     Terminal 1   \n",
       "4               Canada           Enplaned               Other     Terminal 1   \n",
       "5                 Asia           Deplaned               Other  International   \n",
       "6                 Asia           Enplaned               Other  International   \n",
       "7               Europe           Deplaned               Other  International   \n",
       "8               Europe           Enplaned               Other  International   \n",
       "9  Australia / Oceania           Deplaned               Other  International   \n",
       "\n",
       "  Boarding Area  Passenger Count  \n",
       "0             B            27271  \n",
       "1             B            29131  \n",
       "2             B             5415  \n",
       "3             B            35156  \n",
       "4             B            34090  \n",
       "5             G             6263  \n",
       "6             G             5500  \n",
       "7             A            12050  \n",
       "8             A            11638  \n",
       "9             G             4998  "
      ]
     },
     "execution_count": 471,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head(10) # to display tha 10 rows in first"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 472,
   "id": "1e4c5624",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity Period</th>\n",
       "      <th>Operating Airline</th>\n",
       "      <th>Operating Airline IATA Code</th>\n",
       "      <th>Published Airline</th>\n",
       "      <th>Published Airline IATA Code</th>\n",
       "      <th>GEO Summary</th>\n",
       "      <th>GEO Region</th>\n",
       "      <th>Activity Type Code</th>\n",
       "      <th>Price Category Code</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding Area</th>\n",
       "      <th>Passenger Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>46660</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Central America</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46661</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Central America</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>515</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46662</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4987</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46663</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>10090</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46664</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>23537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>2198</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>419</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>21468</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4024</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>202106</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>UA</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5238</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Activity Period Operating Airline Operating Airline IATA Code  \\\n",
       "46660           202106   United Airlines                          UA   \n",
       "46661           202106   United Airlines                          UA   \n",
       "46662           202106   United Airlines                          UA   \n",
       "46663           202106   United Airlines                          UA   \n",
       "46664           202106   United Airlines                          UA   \n",
       "46665           202106   United Airlines                          UA   \n",
       "46666           202106   United Airlines                          UA   \n",
       "46667           202106   United Airlines                          UA   \n",
       "46668           202106   United Airlines                          UA   \n",
       "46669           202106   United Airlines                          UA   \n",
       "\n",
       "      Published Airline Published Airline IATA Code    GEO Summary  \\\n",
       "46660   United Airlines                          UA  International   \n",
       "46661   United Airlines                          UA  International   \n",
       "46662   United Airlines                          UA  International   \n",
       "46663   United Airlines                          UA  International   \n",
       "46664   United Airlines                          UA  International   \n",
       "46665   United Airlines                          UA  International   \n",
       "46666   United Airlines                          UA  International   \n",
       "46667   United Airlines                          UA  International   \n",
       "46668   United Airlines                          UA  International   \n",
       "46669   United Airlines                          UA  International   \n",
       "\n",
       "            GEO Region Activity Type Code Price Category Code       Terminal  \\\n",
       "46660  Central America           Deplaned               Other  International   \n",
       "46661  Central America           Enplaned               Other  International   \n",
       "46662           Europe           Deplaned               Other  International   \n",
       "46663           Europe           Enplaned               Other  International   \n",
       "46664           Mexico           Deplaned               Other  International   \n",
       "46665           Mexico           Enplaned               Other  International   \n",
       "46666           Mexico           Enplaned               Other     Terminal 3   \n",
       "46667           Mexico           Enplaned               Other     Terminal 3   \n",
       "46668      Middle East           Deplaned               Other  International   \n",
       "46669      Middle East           Enplaned               Other  International   \n",
       "\n",
       "      Boarding Area  Passenger Count  \n",
       "46660             G              555  \n",
       "46661             G              515  \n",
       "46662             G             4987  \n",
       "46663             G            10090  \n",
       "46664             G            23537  \n",
       "46665             G             2198  \n",
       "46666             E              419  \n",
       "46667             F            21468  \n",
       "46668             G             4024  \n",
       "46669             G             5238  "
      ]
     },
     "execution_count": 472,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.tail(10) # to display tha 10 rows in end"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 473,
   "id": "dab17d26",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(46670, 12)"
      ]
     },
     "execution_count": 473,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape # to display the shape of df (rows,columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 474,
   "id": "d55b13b8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Activity Period                 int64\n",
       "Operating Airline              object\n",
       "Operating Airline IATA Code    object\n",
       "Published Airline              object\n",
       "Published Airline IATA Code    object\n",
       "GEO Summary                    object\n",
       "GEO Region                     object\n",
       "Activity Type Code             object\n",
       "Price Category Code            object\n",
       "Terminal                       object\n",
       "Boarding Area                  object\n",
       "Passenger Count                 int64\n",
       "dtype: object"
      ]
     },
     "execution_count": 474,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.dtypes # To find the data type of each column"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 475,
   "id": "78da00fa",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 46670 entries, 0 to 46669\n",
      "Data columns (total 12 columns):\n",
      " #   Column                       Non-Null Count  Dtype \n",
      "---  ------                       --------------  ----- \n",
      " 0   Activity Period              46670 non-null  int64 \n",
      " 1   Operating Airline            46670 non-null  object\n",
      " 2   Operating Airline IATA Code  46519 non-null  object\n",
      " 3   Published Airline            46670 non-null  object\n",
      " 4   Published Airline IATA Code  46519 non-null  object\n",
      " 5   GEO Summary                  46670 non-null  object\n",
      " 6   GEO Region                   46670 non-null  object\n",
      " 7   Activity Type Code           46670 non-null  object\n",
      " 8   Price Category Code          46670 non-null  object\n",
      " 9   Terminal                     46670 non-null  object\n",
      " 10  Boarding Area                46670 non-null  object\n",
      " 11  Passenger Count              46670 non-null  int64 \n",
      "dtypes: int64(2), object(10)\n",
      "memory usage: 4.3+ MB\n"
     ]
    }
   ],
   "source": [
    "df.info() #To fetch information about datasit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 476,
   "id": "bc202ca8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity Period</th>\n",
       "      <th>Passenger Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>46670.000000</td>\n",
       "      <td>46670.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>201323.079001</td>\n",
       "      <td>28852.816670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>457.918639</td>\n",
       "      <td>60750.777914</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>200507.000000</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>200908.000000</td>\n",
       "      <td>4796.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>201311.000000</td>\n",
       "      <td>8796.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>201709.000000</td>\n",
       "      <td>19754.750000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>202106.000000</td>\n",
       "      <td>659837.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Activity Period  Passenger Count\n",
       "count     46670.000000     46670.000000\n",
       "mean     201323.079001     28852.816670\n",
       "std         457.918639     60750.777914\n",
       "min      200507.000000         1.000000\n",
       "25%      200908.000000      4796.000000\n",
       "50%      201311.000000      8796.000000\n",
       "75%      201709.000000     19754.750000\n",
       "max      202106.000000    659837.000000"
      ]
     },
     "execution_count": 476,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe()# Displays summary statistic for each numerical column"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2454c235",
   "metadata": {},
   "source": [
    "# 3-Clean data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 477,
   "id": "457f8354",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.rename(columns={'Activity Period': 'Activity_Period',\n",
    "                   'Operating Airline': 'Operating_Airline',\n",
    "                   'GEO Summary': 'GEO_Summary',\n",
    "                   'GEO Region': 'GEO_Region',\n",
    "                   'Activity Type Code': 'Activity_Type',\n",
    "                   'Price Category Code': 'Price_Category',\n",
    "                   'Boarding Area': 'Boarding_Area',\n",
    "                   'Passenger Count': 'Passenger_Count',}, inplace=True) #inplace=True --> ذي تعني ان التغير يتم حتي في الميموري"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 478,
   "id": "3096e6ec",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "      <th>Operating_Airline</th>\n",
       "      <th>Operating Airline IATA Code</th>\n",
       "      <th>Published Airline</th>\n",
       "      <th>Published Airline IATA Code</th>\n",
       "      <th>GEO_Summary</th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Activity_Type</th>\n",
       "      <th>Price_Category</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding_Area</th>\n",
       "      <th>Passenger_Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>148</th>\n",
       "      <td>200508</td>\n",
       "      <td>Boeing Company</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Boeing Company</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Other</td>\n",
       "      <td>Other</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6809</th>\n",
       "      <td>201005</td>\n",
       "      <td>Servisair</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Servisair</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6810</th>\n",
       "      <td>201005</td>\n",
       "      <td>Servisair</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Servisair</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6920</th>\n",
       "      <td>201006</td>\n",
       "      <td>Pacific Aviation</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Pacific Aviation</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6921</th>\n",
       "      <td>201006</td>\n",
       "      <td>Pacific Aviation</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Pacific Aviation</td>\n",
       "      <td>NaN</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>160</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45823</th>\n",
       "      <td>202010</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>30</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45920</th>\n",
       "      <td>202011</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46430</th>\n",
       "      <td>202104</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46534</th>\n",
       "      <td>202105</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46535</th>\n",
       "      <td>202105</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Swissport USA</td>\n",
       "      <td>NaN</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>93</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>151 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Activity_Period Operating_Airline Operating Airline IATA Code  \\\n",
       "148             200508    Boeing Company                         NaN   \n",
       "6809            201005         Servisair                         NaN   \n",
       "6810            201005         Servisair                         NaN   \n",
       "6920            201006  Pacific Aviation                         NaN   \n",
       "6921            201006  Pacific Aviation                         NaN   \n",
       "...                ...               ...                         ...   \n",
       "45823           202010     Swissport USA                         NaN   \n",
       "45920           202011     Swissport USA                         NaN   \n",
       "46430           202104     Swissport USA                         NaN   \n",
       "46534           202105     Swissport USA                         NaN   \n",
       "46535           202105     Swissport USA                         NaN   \n",
       "\n",
       "      Published Airline Published Airline IATA Code    GEO_Summary GEO_Region  \\\n",
       "148      Boeing Company                         NaN       Domestic         US   \n",
       "6809          Servisair                         NaN       Domestic         US   \n",
       "6810          Servisair                         NaN       Domestic         US   \n",
       "6920   Pacific Aviation                         NaN  International     Europe   \n",
       "6921   Pacific Aviation                         NaN  International     Europe   \n",
       "...                 ...                         ...            ...        ...   \n",
       "45823     Swissport USA                         NaN       Domestic         US   \n",
       "45920     Swissport USA                         NaN       Domestic         US   \n",
       "46430     Swissport USA                         NaN       Domestic         US   \n",
       "46534     Swissport USA                         NaN       Domestic         US   \n",
       "46535     Swissport USA                         NaN       Domestic         US   \n",
       "\n",
       "      Activity_Type Price_Category       Terminal Boarding_Area  \\\n",
       "148        Deplaned          Other          Other         Other   \n",
       "6809       Deplaned       Low Fare  International             G   \n",
       "6810       Enplaned       Low Fare  International             G   \n",
       "6920       Deplaned          Other  International             A   \n",
       "6921       Enplaned          Other  International             A   \n",
       "...             ...            ...            ...           ...   \n",
       "45823      Enplaned          Other  International             A   \n",
       "45920      Enplaned          Other  International             G   \n",
       "46430      Enplaned          Other  International             A   \n",
       "46534      Deplaned          Other  International             A   \n",
       "46535      Enplaned          Other  International             A   \n",
       "\n",
       "       Passenger_Count  \n",
       "148                 18  \n",
       "6809                73  \n",
       "6810                73  \n",
       "6920               160  \n",
       "6921               160  \n",
       "...                ...  \n",
       "45823               30  \n",
       "45920               31  \n",
       "46430               31  \n",
       "46534               93  \n",
       "46535               93  \n",
       "\n",
       "[151 rows x 12 columns]"
      ]
     },
     "execution_count": 478,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_null = df[df['Published Airline IATA Code'].isnull()] #will show dataset with columns that have missing data\n",
    "df_null "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 479,
   "id": "d6e363f8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Missing values</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Activity_Period</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operating_Airline</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Operating Airline IATA Code</th>\n",
       "      <td>151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Published Airline</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Published Airline IATA Code</th>\n",
       "      <td>151</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GEO_Summary</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>GEO_Region</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Activity_Type</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Price_Category</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Terminal</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Boarding_Area</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Passenger_Count</th>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                             Missing values\n",
       "Activity_Period                           0\n",
       "Operating_Airline                         0\n",
       "Operating Airline IATA Code             151\n",
       "Published Airline                         0\n",
       "Published Airline IATA Code             151\n",
       "GEO_Summary                               0\n",
       "GEO_Region                                0\n",
       "Activity_Type                             0\n",
       "Price_Category                            0\n",
       "Terminal                                  0\n",
       "Boarding_Area                             0\n",
       "Passenger_Count                           0"
      ]
     },
     "execution_count": 479,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nulls = df.isnull().sum().to_frame()# (to_frame():Convert Series to DataFrame),(sum():To sum the number of missing values),(isnull()to detect missing values)\n",
    "nulls.columns = [\"Missing values\"] \n",
    "nulls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 480,
   "id": "e4e05db4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'\\nIt was found from the previous output that there are two columns that contain missing values,\\nso these columns will be deleted because these columns are not relevent for this analysis . \\n'"
      ]
     },
     "execution_count": 480,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "'''\n",
    "It was found from the previous output that there are two columns that contain missing values,\n",
    "so these columns will be deleted because these columns are not relevent for this analysis . \n",
    "'''"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 481,
   "id": "c49e75ce",
   "metadata": {},
   "outputs": [],
   "source": [
    "df.drop(['Operating Airline IATA Code', 'Published Airline IATA Code','Published Airline'],axis=1, inplace=True ) # delete two columns ,(axis=1:refers to column dimension)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 482,
   "id": "3f0be64e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Activity_Period      0\n",
       "Operating_Airline    0\n",
       "GEO_Summary          0\n",
       "GEO_Region           0\n",
       "Activity_Type        0\n",
       "Price_Category       0\n",
       "Terminal             0\n",
       "Boarding_Area        0\n",
       "Passenger_Count      0\n",
       "dtype: int64"
      ]
     },
     "execution_count": 482,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "nulls = df.isnull().sum()\n",
    "# (to_frame():Convert Series to DataFrame),(sum():To sum the number of missing values),(isnull()to detect missing values)\n",
    "nulls.columns = [\"Missing values\"] \n",
    "nulls"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 483,
   "id": "96e3ba77",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(46670, 9)"
      ]
     },
     "execution_count": 483,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.shape "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 484,
   "id": "86941aa5",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Activity_Type\"].replace({\"Thru / Transit\": \"Transit\"}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 485,
   "id": "b2aeff30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0        200507\n",
       "1        200507\n",
       "2        200507\n",
       "3        200507\n",
       "4        200507\n",
       "          ...  \n",
       "46665    202106\n",
       "46666    202106\n",
       "46667    202106\n",
       "46668    202106\n",
       "46669    202106\n",
       "Name: Activity_Period, Length: 46670, dtype: int64"
      ]
     },
     "execution_count": 485,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#df['Activity Period']. dt.date\n",
    "#df['Activity Period'] = pd.to_datetime(df['Activity Period']).dt.date\n",
    "df['Activity_Period']  # to display the values of colum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 486,
   "id": "e75e81fe",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2005-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-07-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>2021-06-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>2021-06-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>2021-06-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>2021-06-01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>2021-06-01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>46670 rows × 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Activity_Period\n",
       "0          2005-07-01\n",
       "1          2005-07-01\n",
       "2          2005-07-01\n",
       "3          2005-07-01\n",
       "4          2005-07-01\n",
       "...               ...\n",
       "46665      2021-06-01\n",
       "46666      2021-06-01\n",
       "46667      2021-06-01\n",
       "46668      2021-06-01\n",
       "46669      2021-06-01\n",
       "\n",
       "[46670 rows x 1 columns]"
      ]
     },
     "execution_count": 486,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_date = pd.to_datetime(df['Activity_Period'], format=\"%Y%m\").to_frame()\n",
    "df_date  # to format the date "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 487,
   "id": "3fe3f5bf",
   "metadata": {},
   "outputs": [],
   "source": [
    "df[\"Activity_Period\"] = df_date # to add value of the format date in column Activity_Period"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 488,
   "id": "623fc2a8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       2005-07-01\n",
       "1       2005-07-01\n",
       "2       2005-07-01\n",
       "3       2005-07-01\n",
       "4       2005-07-01\n",
       "           ...    \n",
       "46665   2021-06-01\n",
       "46666   2021-06-01\n",
       "46667   2021-06-01\n",
       "46668   2021-06-01\n",
       "46669   2021-06-01\n",
       "Name: Activity_Period, Length: 46670, dtype: datetime64[ns]"
      ]
     },
     "execution_count": 488,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['Activity_Period'] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 489,
   "id": "71d1425a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "      <th>Operating_Airline</th>\n",
       "      <th>GEO_Summary</th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Activity_Type</th>\n",
       "      <th>Price_Category</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding_Area</th>\n",
       "      <th>Passenger_Count</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2005-07-01</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>27271</td>\n",
       "      <td>2005</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2005-07-01</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>29131</td>\n",
       "      <td>2005</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2005-07-01</td>\n",
       "      <td>ATA Airlines</td>\n",
       "      <td>Domestic</td>\n",
       "      <td>US</td>\n",
       "      <td>Transit</td>\n",
       "      <td>Low Fare</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>5415</td>\n",
       "      <td>2005</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2005-07-01</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>35156</td>\n",
       "      <td>2005</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2005-07-01</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 1</td>\n",
       "      <td>B</td>\n",
       "      <td>34090</td>\n",
       "      <td>2005</td>\n",
       "      <td>7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>2198</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>419</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>21468</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4024</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5238</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>46670 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Activity_Period Operating_Airline    GEO_Summary   GEO_Region  \\\n",
       "0          2005-07-01      ATA Airlines       Domestic           US   \n",
       "1          2005-07-01      ATA Airlines       Domestic           US   \n",
       "2          2005-07-01      ATA Airlines       Domestic           US   \n",
       "3          2005-07-01        Air Canada  International       Canada   \n",
       "4          2005-07-01        Air Canada  International       Canada   \n",
       "...               ...               ...            ...          ...   \n",
       "46665      2021-06-01   United Airlines  International       Mexico   \n",
       "46666      2021-06-01   United Airlines  International       Mexico   \n",
       "46667      2021-06-01   United Airlines  International       Mexico   \n",
       "46668      2021-06-01   United Airlines  International  Middle East   \n",
       "46669      2021-06-01   United Airlines  International  Middle East   \n",
       "\n",
       "      Activity_Type Price_Category       Terminal Boarding_Area  \\\n",
       "0          Deplaned       Low Fare     Terminal 1             B   \n",
       "1          Enplaned       Low Fare     Terminal 1             B   \n",
       "2           Transit       Low Fare     Terminal 1             B   \n",
       "3          Deplaned          Other     Terminal 1             B   \n",
       "4          Enplaned          Other     Terminal 1             B   \n",
       "...             ...            ...            ...           ...   \n",
       "46665      Enplaned          Other  International             G   \n",
       "46666      Enplaned          Other     Terminal 3             E   \n",
       "46667      Enplaned          Other     Terminal 3             F   \n",
       "46668      Deplaned          Other  International             G   \n",
       "46669      Enplaned          Other  International             G   \n",
       "\n",
       "       Passenger_Count  Year  Month  \n",
       "0                27271  2005      7  \n",
       "1                29131  2005      7  \n",
       "2                 5415  2005      7  \n",
       "3                35156  2005      7  \n",
       "4                34090  2005      7  \n",
       "...                ...   ...    ...  \n",
       "46665             2198  2021      6  \n",
       "46666              419  2021      6  \n",
       "46667            21468  2021      6  \n",
       "46668             4024  2021      6  \n",
       "46669             5238  2021      6  \n",
       "\n",
       "[46670 rows x 11 columns]"
      ]
     },
     "execution_count": 489,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Year = df[\"Activity_Period\"].dt.year \n",
    "Month = df[\"Activity_Period\"].dt.month\n",
    "df['Year'] = Year # add new column to dataframe\n",
    "df['Month'] = Month # add new column to dataframe\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 490,
   "id": "958e9192",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "      Activity_Period                         Operating_Airline  \\\n",
      "19815      2019-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
      "19816      2019-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
      "19817      2019-01-01                                Aer Lingus   \n",
      "19818      2019-01-01                                Aer Lingus   \n",
      "19819      2019-01-01                                Aeromexico   \n",
      "...               ...                                       ...   \n",
      "46665      2021-06-01                           United Airlines   \n",
      "46666      2021-06-01                           United Airlines   \n",
      "46667      2021-06-01                           United Airlines   \n",
      "46668      2021-06-01                           United Airlines   \n",
      "46669      2021-06-01                           United Airlines   \n",
      "\n",
      "         GEO_Summary   GEO_Region Activity_Type Price_Category       Terminal  \\\n",
      "19815  International       Mexico      Deplaned          Other  International   \n",
      "19816  International       Mexico      Enplaned          Other  International   \n",
      "19817  International       Europe      Deplaned          Other  International   \n",
      "19818  International       Europe      Enplaned          Other  International   \n",
      "19819  International       Mexico      Deplaned          Other  International   \n",
      "...              ...          ...           ...            ...            ...   \n",
      "46665  International       Mexico      Enplaned          Other  International   \n",
      "46666  International       Mexico      Enplaned          Other     Terminal 3   \n",
      "46667  International       Mexico      Enplaned          Other     Terminal 3   \n",
      "46668  International  Middle East      Deplaned          Other  International   \n",
      "46669  International  Middle East      Enplaned          Other  International   \n",
      "\n",
      "      Boarding_Area  Passenger_Count  Year  Month  \n",
      "19815             A             7071  2019      1  \n",
      "19816             A             5517  2019      1  \n",
      "19817             G             6444  2019      1  \n",
      "19818             G             5448  2019      1  \n",
      "19819             A            14767  2019      1  \n",
      "...             ...              ...   ...    ...  \n",
      "46665             G             2198  2021      6  \n",
      "46666             E              419  2021      6  \n",
      "46667             F            21468  2021      6  \n",
      "46668             G             4024  2021      6  \n",
      "46669             G             5238  2021      6  \n",
      "\n",
      "[7040 rows x 11 columns]\n"
     ]
    }
   ],
   "source": [
    "# Delete Rows by Checking Conditions\n",
    "df1 = df.drop(df[df.Year < 2019 ].index)\n",
    "print(df1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 491,
   "id": "32ec79b9",
   "metadata": {},
   "outputs": [],
   "source": [
    "df1[\"Activity_Type\"].replace({\"Thru / Transit\": \"Transit\"}, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 492,
   "id": "74ecefdf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "      <th>Operating_Airline</th>\n",
       "      <th>GEO_Summary</th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Activity_Type</th>\n",
       "      <th>Price_Category</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding_Area</th>\n",
       "      <th>Passenger_Count</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19815</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>ABC Aerolineas S.A. de C.V. dba Interjet</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>7071</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19816</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>ABC Aerolineas S.A. de C.V. dba Interjet</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>5517</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19817</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aer Lingus</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>6444</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19818</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aer Lingus</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5448</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19819</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aeromexico</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>14767</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>2198</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>419</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>21468</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4024</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5238</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>7040 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Activity_Period                         Operating_Airline  \\\n",
       "19815      2019-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
       "19816      2019-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
       "19817      2019-01-01                                Aer Lingus   \n",
       "19818      2019-01-01                                Aer Lingus   \n",
       "19819      2019-01-01                                Aeromexico   \n",
       "...               ...                                       ...   \n",
       "46665      2021-06-01                           United Airlines   \n",
       "46666      2021-06-01                           United Airlines   \n",
       "46667      2021-06-01                           United Airlines   \n",
       "46668      2021-06-01                           United Airlines   \n",
       "46669      2021-06-01                           United Airlines   \n",
       "\n",
       "         GEO_Summary   GEO_Region Activity_Type Price_Category       Terminal  \\\n",
       "19815  International       Mexico      Deplaned          Other  International   \n",
       "19816  International       Mexico      Enplaned          Other  International   \n",
       "19817  International       Europe      Deplaned          Other  International   \n",
       "19818  International       Europe      Enplaned          Other  International   \n",
       "19819  International       Mexico      Deplaned          Other  International   \n",
       "...              ...          ...           ...            ...            ...   \n",
       "46665  International       Mexico      Enplaned          Other  International   \n",
       "46666  International       Mexico      Enplaned          Other     Terminal 3   \n",
       "46667  International       Mexico      Enplaned          Other     Terminal 3   \n",
       "46668  International  Middle East      Deplaned          Other  International   \n",
       "46669  International  Middle East      Enplaned          Other  International   \n",
       "\n",
       "      Boarding_Area  Passenger_Count  Year  Month  \n",
       "19815             A             7071  2019      1  \n",
       "19816             A             5517  2019      1  \n",
       "19817             G             6444  2019      1  \n",
       "19818             G             5448  2019      1  \n",
       "19819             A            14767  2019      1  \n",
       "...             ...              ...   ...    ...  \n",
       "46665             G             2198  2021      6  \n",
       "46666             E              419  2021      6  \n",
       "46667             F            21468  2021      6  \n",
       "46668             G             4024  2021      6  \n",
       "46669             G             5238  2021      6  \n",
       "\n",
       "[7040 rows x 11 columns]"
      ]
     },
     "execution_count": 492,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 493,
   "id": "09b27c8d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "      <th>Operating_Airline</th>\n",
       "      <th>GEO_Summary</th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Activity_Type</th>\n",
       "      <th>Price_Category</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding_Area</th>\n",
       "      <th>Passenger_Count</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>19815</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>ABC Aerolineas S.A. de C.V. dba Interjet</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>7071</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19816</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>ABC Aerolineas S.A. de C.V. dba Interjet</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>5517</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19817</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aer Lingus</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>6444</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19818</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aer Lingus</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5448</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19819</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aeromexico</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>14767</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19820</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Aeromexico</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>12587</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19821</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>31173</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19822</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Air Canada</td>\n",
       "      <td>International</td>\n",
       "      <td>Canada</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>27681</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19823</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Air China</td>\n",
       "      <td>International</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>10466</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19824</th>\n",
       "      <td>2019-01-01</td>\n",
       "      <td>Air China</td>\n",
       "      <td>International</td>\n",
       "      <td>Asia</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>9361</td>\n",
       "      <td>2019</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Activity_Period                         Operating_Airline  \\\n",
       "19815      2019-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
       "19816      2019-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
       "19817      2019-01-01                                Aer Lingus   \n",
       "19818      2019-01-01                                Aer Lingus   \n",
       "19819      2019-01-01                                Aeromexico   \n",
       "19820      2019-01-01                                Aeromexico   \n",
       "19821      2019-01-01                                Air Canada   \n",
       "19822      2019-01-01                                Air Canada   \n",
       "19823      2019-01-01                                 Air China   \n",
       "19824      2019-01-01                                 Air China   \n",
       "\n",
       "         GEO_Summary GEO_Region Activity_Type Price_Category       Terminal  \\\n",
       "19815  International     Mexico      Deplaned          Other  International   \n",
       "19816  International     Mexico      Enplaned          Other  International   \n",
       "19817  International     Europe      Deplaned          Other  International   \n",
       "19818  International     Europe      Enplaned          Other  International   \n",
       "19819  International     Mexico      Deplaned          Other  International   \n",
       "19820  International     Mexico      Enplaned          Other  International   \n",
       "19821  International     Canada      Deplaned          Other  International   \n",
       "19822  International     Canada      Enplaned          Other  International   \n",
       "19823  International       Asia      Deplaned          Other  International   \n",
       "19824  International       Asia      Enplaned          Other  International   \n",
       "\n",
       "      Boarding_Area  Passenger_Count  Year  Month  \n",
       "19815             A             7071  2019      1  \n",
       "19816             A             5517  2019      1  \n",
       "19817             G             6444  2019      1  \n",
       "19818             G             5448  2019      1  \n",
       "19819             A            14767  2019      1  \n",
       "19820             A            12587  2019      1  \n",
       "19821             G            31173  2019      1  \n",
       "19822             G            27681  2019      1  \n",
       "19823             G            10466  2019      1  \n",
       "19824             G             9361  2019      1  "
      ]
     },
     "execution_count": 493,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 494,
   "id": "b5e72d53",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "      <th>Operating_Airline</th>\n",
       "      <th>GEO_Summary</th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Activity_Type</th>\n",
       "      <th>Price_Category</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding_Area</th>\n",
       "      <th>Passenger_Count</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>46660</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Central America</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>555</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46661</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Central America</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>515</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46662</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4987</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46663</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>10090</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46664</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>23537</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46665</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>2198</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46666</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>419</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46667</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>21468</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46668</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>4024</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46669</th>\n",
       "      <td>2021-06-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5238</td>\n",
       "      <td>2021</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      Activity_Period Operating_Airline    GEO_Summary       GEO_Region  \\\n",
       "46660      2021-06-01   United Airlines  International  Central America   \n",
       "46661      2021-06-01   United Airlines  International  Central America   \n",
       "46662      2021-06-01   United Airlines  International           Europe   \n",
       "46663      2021-06-01   United Airlines  International           Europe   \n",
       "46664      2021-06-01   United Airlines  International           Mexico   \n",
       "46665      2021-06-01   United Airlines  International           Mexico   \n",
       "46666      2021-06-01   United Airlines  International           Mexico   \n",
       "46667      2021-06-01   United Airlines  International           Mexico   \n",
       "46668      2021-06-01   United Airlines  International      Middle East   \n",
       "46669      2021-06-01   United Airlines  International      Middle East   \n",
       "\n",
       "      Activity_Type Price_Category       Terminal Boarding_Area  \\\n",
       "46660      Deplaned          Other  International             G   \n",
       "46661      Enplaned          Other  International             G   \n",
       "46662      Deplaned          Other  International             G   \n",
       "46663      Enplaned          Other  International             G   \n",
       "46664      Deplaned          Other  International             G   \n",
       "46665      Enplaned          Other  International             G   \n",
       "46666      Enplaned          Other     Terminal 3             E   \n",
       "46667      Enplaned          Other     Terminal 3             F   \n",
       "46668      Deplaned          Other  International             G   \n",
       "46669      Enplaned          Other  International             G   \n",
       "\n",
       "       Passenger_Count  Year  Month  \n",
       "46660              555  2021      6  \n",
       "46661              515  2021      6  \n",
       "46662             4987  2021      6  \n",
       "46663            10090  2021      6  \n",
       "46664            23537  2021      6  \n",
       "46665             2198  2021      6  \n",
       "46666              419  2021      6  \n",
       "46667            21468  2021      6  \n",
       "46668             4024  2021      6  \n",
       "46669             5238  2021      6  "
      ]
     },
     "execution_count": 494,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 495,
   "id": "af21453a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(7040, 11)"
      ]
     },
     "execution_count": 495,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df1.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 496,
   "id": "0af9c812",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "Int64Index: 7040 entries, 19815 to 46669\n",
      "Data columns (total 11 columns):\n",
      " #   Column             Non-Null Count  Dtype         \n",
      "---  ------             --------------  -----         \n",
      " 0   Activity_Period    7040 non-null   datetime64[ns]\n",
      " 1   Operating_Airline  7040 non-null   object        \n",
      " 2   GEO_Summary        7040 non-null   object        \n",
      " 3   GEO_Region         7040 non-null   object        \n",
      " 4   Activity_Type      7040 non-null   object        \n",
      " 5   Price_Category     7040 non-null   object        \n",
      " 6   Terminal           7040 non-null   object        \n",
      " 7   Boarding_Area      7040 non-null   object        \n",
      " 8   Passenger_Count    7040 non-null   int64         \n",
      " 9   Year               7040 non-null   int64         \n",
      " 10  Month              7040 non-null   int64         \n",
      "dtypes: datetime64[ns](1), int64(3), object(7)\n",
      "memory usage: 660.0+ KB\n"
     ]
    }
   ],
   "source": [
    "df1.info()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "01daff59",
   "metadata": {},
   "source": [
    "# 4-Data analysis"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4df385dd",
   "metadata": {},
   "source": [
    "1-The five most visited countries in 2020?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 497,
   "id": "1965e7da",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Activity_Period</th>\n",
       "      <th>Operating_Airline</th>\n",
       "      <th>GEO_Summary</th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Activity_Type</th>\n",
       "      <th>Price_Category</th>\n",
       "      <th>Terminal</th>\n",
       "      <th>Boarding_Area</th>\n",
       "      <th>Passenger_Count</th>\n",
       "      <th>Year</th>\n",
       "      <th>Month</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>21685</th>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>ABC Aerolineas S.A. de C.V. dba Interjet</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>4367</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21686</th>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>ABC Aerolineas S.A. de C.V. dba Interjet</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>3923</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21687</th>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>Aer Lingus</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>6857</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21688</th>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>Aer Lingus</td>\n",
       "      <td>International</td>\n",
       "      <td>Europe</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>5790</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21689</th>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>Aeromexico</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>A</td>\n",
       "      <td>15964</td>\n",
       "      <td>2020</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46042</th>\n",
       "      <td>2020-12-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>585</td>\n",
       "      <td>2020</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46043</th>\n",
       "      <td>2020-12-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>E</td>\n",
       "      <td>1237</td>\n",
       "      <td>2020</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46044</th>\n",
       "      <td>2020-12-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Mexico</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>Terminal 3</td>\n",
       "      <td>F</td>\n",
       "      <td>14765</td>\n",
       "      <td>2020</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46045</th>\n",
       "      <td>2020-12-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Deplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>1166</td>\n",
       "      <td>2020</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46046</th>\n",
       "      <td>2020-12-01</td>\n",
       "      <td>United Airlines</td>\n",
       "      <td>International</td>\n",
       "      <td>Middle East</td>\n",
       "      <td>Enplaned</td>\n",
       "      <td>Other</td>\n",
       "      <td>International</td>\n",
       "      <td>G</td>\n",
       "      <td>1097</td>\n",
       "      <td>2020</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2368 rows × 11 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Activity_Period                         Operating_Airline  \\\n",
       "21685      2020-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
       "21686      2020-01-01  ABC Aerolineas S.A. de C.V. dba Interjet   \n",
       "21687      2020-01-01                                Aer Lingus   \n",
       "21688      2020-01-01                                Aer Lingus   \n",
       "21689      2020-01-01                                Aeromexico   \n",
       "...               ...                                       ...   \n",
       "46042      2020-12-01                           United Airlines   \n",
       "46043      2020-12-01                           United Airlines   \n",
       "46044      2020-12-01                           United Airlines   \n",
       "46045      2020-12-01                           United Airlines   \n",
       "46046      2020-12-01                           United Airlines   \n",
       "\n",
       "         GEO_Summary   GEO_Region Activity_Type Price_Category       Terminal  \\\n",
       "21685  International       Mexico      Deplaned          Other  International   \n",
       "21686  International       Mexico      Enplaned          Other  International   \n",
       "21687  International       Europe      Deplaned          Other  International   \n",
       "21688  International       Europe      Enplaned          Other  International   \n",
       "21689  International       Mexico      Deplaned          Other  International   \n",
       "...              ...          ...           ...            ...            ...   \n",
       "46042  International       Mexico      Enplaned          Other  International   \n",
       "46043  International       Mexico      Enplaned          Other     Terminal 3   \n",
       "46044  International       Mexico      Enplaned          Other     Terminal 3   \n",
       "46045  International  Middle East      Deplaned          Other  International   \n",
       "46046  International  Middle East      Enplaned          Other  International   \n",
       "\n",
       "      Boarding_Area  Passenger_Count  Year  Month  \n",
       "21685             A             4367  2020      1  \n",
       "21686             A             3923  2020      1  \n",
       "21687             G             6857  2020      1  \n",
       "21688             G             5790  2020      1  \n",
       "21689             A            15964  2020      1  \n",
       "...             ...              ...   ...    ...  \n",
       "46042             G              585  2020     12  \n",
       "46043             E             1237  2020     12  \n",
       "46044             F            14765  2020     12  \n",
       "46045             G             1166  2020     12  \n",
       "46046             G             1097  2020     12  \n",
       "\n",
       "[2368 rows x 11 columns]"
      ]
     },
     "execution_count": 497,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_2020 = df1[df1['Year'] == 2020] # to get subset from dataset\n",
    "df_2020 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 498,
   "id": "7e37740f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>GEO_Region</th>\n",
       "      <th>Passenger_Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>US</td>\n",
       "      <td>26236690</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Asia</td>\n",
       "      <td>2544206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Europe</td>\n",
       "      <td>1568216</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Mexico</td>\n",
       "      <td>842602</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Canada</td>\n",
       "      <td>669002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Australia / Oceania</td>\n",
       "      <td>547110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Middle East</td>\n",
       "      <td>241272</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Central America</td>\n",
       "      <td>188328</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "            GEO_Region  Passenger_Count\n",
       "0                   US         26236690\n",
       "1                 Asia          2544206\n",
       "2               Europe          1568216\n",
       "3               Mexico           842602\n",
       "4               Canada           669002\n",
       "5  Australia / Oceania           547110\n",
       "6          Middle East           241272\n",
       "7      Central America           188328"
      ]
     },
     "execution_count": 498,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_Most_country = df_2020.groupby('GEO_Region').Passenger_Count.sum().sort_values(ascending=False ).to_frame().reset_index()\n",
    "df_Most_country"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 522,
   "id": "170057fc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Passenger')"
      ]
     },
     "execution_count": 522,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#A visual display of information to represent the data of the 5 most visited countries in 2020\n",
    "plt.figure(figsize = [7,7])\n",
    "plt.xticks(rotation = 45)\n",
    "fig1 = sns.barplot(x ='GEO_Region',y = 'Passenger_Count' , data = df_Most_country , palette = \"Set2\"  )\n",
    "plt.title('Most 5 traveled countries in 2020',fontsize = 15,weight='bold',color='black')\n",
    "plt.xlabel('Region',fontsize = 10, weight = 'bold',color='Black')\n",
    "plt.ylabel('Number of Passenger',fontsize = 10, weight = 'bold',color='Black')\n",
    "#fig1 = df_new.plot.bar(x='GEO_Region' , y='counts'), palette = \"R\"\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0ceebb35",
   "metadata": {},
   "source": [
    "2-What is the expected increase in the number of passengers by years ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 500,
   "id": "1b544ad4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Passenger_Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019</td>\n",
       "      <td>114837148</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020</td>\n",
       "      <td>32837426</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2021</td>\n",
       "      <td>10773008</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   Year  Passenger_Count\n",
       "0  2019        114837148\n",
       "1  2020         32837426\n",
       "2  2021         10773008"
      ]
     },
     "execution_count": 500,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Expected_increase = df1.groupby('Year').Passenger_Count.sum().sort_values(ascending=False ).to_frame().reset_index()\n",
    "Expected_increase"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 523,
   "id": "360930e4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Number of Passenger')"
      ]
     },
     "execution_count": 523,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize = [7,7])\n",
    "fig2 = sns.barplot(x ='Year',y = 'Passenger_Count' , data = Expected_increase , color = '#008ac5' )\n",
    "plt.title('Expected increase in the number of passengers by years',fontsize =10,weight='bold',color='black')\n",
    "plt.xlabel('Year',fontsize = 11, weight = 'bold',color='Black')\n",
    "plt.ylabel('Number of Passenger',fontsize = 10, weight = 'bold',color='Black')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f0942796",
   "metadata": {},
   "source": [
    "3- What is the most month in which the number of passengers was high ?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 504,
   "id": "97334c63",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Month</th>\n",
       "      <th>Passenger_Count</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>8483502</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>7484448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>3770932</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>10</td>\n",
       "      <td>2147764</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>11</td>\n",
       "      <td>2104634</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>12</td>\n",
       "      <td>1837446</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>9</td>\n",
       "      <td>1811984</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>1705156</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>7</td>\n",
       "      <td>1530548</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>6</td>\n",
       "      <td>1110238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>5</td>\n",
       "      <td>573140</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>4</td>\n",
       "      <td>277634</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Month  Passenger_Count\n",
       "0       1          8483502\n",
       "1       2          7484448\n",
       "2       3          3770932\n",
       "3      10          2147764\n",
       "4      11          2104634\n",
       "5      12          1837446\n",
       "6       9          1811984\n",
       "7       8          1705156\n",
       "8       7          1530548\n",
       "9       6          1110238\n",
       "10      5           573140\n",
       "11      4           277634"
      ]
     },
     "execution_count": 504,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# To get the maximum number of travelers by months\n",
    "df_2020_max = df_2020.groupby('Month').Passenger_Count.sum().sort_values(ascending=False ).to_frame().reset_index()\n",
    "df_2020_max"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 524,
   "id": "ded8944a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 504x504 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# A visual display of information to represent the data of the most traveled month by number of passengers\n",
    "plt.figure(figsize = [7,7])\n",
    "plt.title('The maximum number of travelers by months in 2020',fontsize = 10,weight='bold',color='black')\n",
    "sns.barplot(x ='Month', y='Passenger_Count' , data = num_pasenger1 ,palette=\"Blues_d\")\n",
    "plt.xlabel('Month',fontsize = 10, weight = 'bold',color='Black')\n",
    "plt.ylabel('Number of Passenger' ,fontsize = 10 , weight = 'bold',color='Black')\n",
    "# Show the plot\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a2ce12a2",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
